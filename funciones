#ifndef FUNCIONESTRABAJOPRACTICOFINAL_H_INCLUDED
#define FUNCIONESTRABAJOPRACTICOFINAL_H_INCLUDED
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <windows.h>
using namespace std;


/**menu principal**/
int menu(){
 int desicionmenu;
 cout<<"  -----------------------------------------"<<endl;
   cout<<"  -----1-UN JUGADOR------------------------"<<endl;
   cout<<"  -----2-DOS JUGADORES---------------------"<<endl;
   cout<<"  -----3-MAXIMA CALIFICACION---------------"<<endl;
   cout<<"  -----0-SALIR-----------------------------"<<endl;
   cout<<"  -----------------------------------------"<<endl;
   cin>>desicionmenu;
   return desicionmenu;
}

/**menu para pedir el nombre modo un jugador**/
void bienvenida1jugador(){
  cout<<"----------------------------------"<<endl;
  cout<<"---hola este es modo un jugador---"<<endl;
  cout<<"----------------------------------"<<endl;
  cout<<"ingresa tu nombre: ";
}


/**menu para pedir nombre modo dos jugadores**/
void bienvenida2jugador(){
  cout<<"----------------------------------"<<endl;
  cout<<"---hola este es modo dos jugadores---"<<endl;
  cout<<"----------------------------------"<<endl;
  cout<<"ingresa nombre jugadod numero 1: ";




}

/**tirar dados**/
void tirardados(int dados[],int c){
 int i ,x;
    srand(time(NULL));
    for (i=0; i<c; i++){
        dados[i]=(rand()%6)+1;
    }

    for (x=0; x<c; x++){
        cout << dados[x];
        cout << "\t";
    }


}
/**nombre maximo ganador**/
int nombregnadormayo(char nombre[],char nombremaximo[],int tam){
int i;
    for(i=0;i<tam;i++){
        nombremaximo[i]=nombre[i];
    }


}


/**combinaciones ganadoras**/

/// juego de 1
int CombGanadoras1(int VecDados[], int tamD, int valorD1){
    int i, Suma=0, c=0;
    for (i=0; i<tamD; i++){
        if (VecDados[i]==valorD1){
            c++;
        }
    }
    if (c==1||c==2){
        Suma=c*100;
        }
    return Suma;
}

///juego de 5
int CombGanadoras2(int VecDados[], int tamD, int valorD2){
    int i, Suma=0, c=0;
    for (i=0; i<tamD; i++){
        if (VecDados[i]==valorD2){
            c++;
        }
    }
    if (c==1||c==2){
        Suma=c*50;

    }
    return Suma;
}

///trio de 1
int CombGanadoras3(int VecDados[], int tamD, int valorD1){
    int i, Suma=0, c=0;
    for (i=0; i<tamD; i++){
        if (VecDados[i]==valorD1){
            c++;
        }
    }
    if (c==3){
        Suma=1000;

    }
    return Suma;}

///tri ganador combinacion 4
int TrioGanador4(int VecDados[], int tamD){
    int i, aux2;
    int uno=0,dos=0,tres=0,cuatro=0,cinco=0,seis=0;
    for (i=0; i<6; i++){
        if (VecDados[i]==2){
            dos++;
        }
        if (VecDados[i]==3){
            tres++;
        }
        if (VecDados[i]==4){
            cuatro++;
        }
        if (VecDados[i]==5){
            cinco++;
        }
        if (VecDados[i]==6){
            seis++;
        }
    }
    if (dos==3){
        aux2=2;
    }
    if (tres==3){
        aux2=3;
    }
    if (cuatro==3){
        aux2=4;
    }
    if (cinco==3){
        aux2=5;
    }
    if (seis==3){
        aux2=6;
    }
    return aux2;
}

///trio ganador que no sea 1
int CombGanadoras4(int VecDados[], int tamD){
    int i, Suma;
    int uno=0,dos=0,tres=0,cuatro=0,cinco=0,seis=0;
    for (i=0; i<6; i++){
        if (VecDados[i]==2){
            dos++;
        }
        if (VecDados[i]==3){
            tres++;
        }
        if (VecDados[i]==4){
            cuatro++;
        }
        if (VecDados[i]==5){
            cinco++;
        }
        if (VecDados[i]==6){
            seis++;
        }
    }
    if (dos==3){
        Suma=2*100;
    }
    if (tres==3){
        Suma=3*100;
    }
    if (cuatro==3){
        Suma=4*100;
    }
    if (cinco==3){
        Suma=5*100;
    }
    if (seis==3){
        Suma=6*100;
    }
    return Suma;
}

///trio ganador combinacion 5
int TrioGanador5(int VecDados[], int tamD){
    int i, aux2;
    int uno=0,dos=0,tres=0,cuatro=0,cinco=0,seis=0;
    for (i=0; i<6; i++){
        if (VecDados[i]==2){
            dos++;
        }
        if (VecDados[i]==3){
            tres++;
        }
        if (VecDados[i]==4){
            cuatro++;
        }
        if (VecDados[i]==5){
            cinco++;
        }
        if (VecDados[i]==6){
            seis++;
        }
    }
    if (dos==4||dos==5){
        aux2=2;
    }
    if (tres==4||tres==5){
        aux2=3;
    }
    if (cuatro==4||cuatro==5){
        aux2=4;
    }
    if (cinco==4||cinco==5){
        aux2=5;
    }
    if (seis==4||seis==5){
        aux2=6;
    }
    return aux2;
}

///mas de 3 veces repetidas el mismo numero
int CombGanadoras5(int VecDados[], int tamD){
    int i, Suma;
    int uno=0,dos=0,tres=0,cuatro=0,cinco=0,seis=0;
    for (i=0; i<6; i++){
        if (VecDados[i]==2){
            dos++;
        }
        if (VecDados[i]==3){
            tres++;
        }
        if (VecDados[i]==4){
            cuatro++;
        }
        if (VecDados[i]==5){
            cinco++;
        }
        if (VecDados[i]==6){
            seis++;
        }
    }
    if (dos==4||dos==5){
        Suma=2*200;
    }
    if (tres==4||tres==5){
        Suma=3*200;
    }
    if (cuatro==4||cuatro==5){
        Suma=4*200;
    }
    if (cinco==4||cinco==5){
        Suma=5*200;
    }
    if (seis==4||seis==5){
        Suma=6*200;
    }
    return Suma;
}


///trio 1 ampliado
int CombGanadoras6(int VecDados[], int tamD, int valorD1){
    int i, Suma=0, c=0;
    for (i=0; i<tamD; i++){
        if (VecDados[i]==valorD1){
            c++;
        }
    }
    if (c==4||c==5){
        Suma=2000;

    }
    return Suma;
}


///tres pares
int CombGanadoras7(int VecDados[], int tamD){
    int i, x, Suma=0, c=0, aux, minimo;

    for (i=0; i<tamD; i++){
        minimo=i;
        for (x=i+1; x<tamD; x++){
            if (VecDados[x]<VecDados[minimo]){
                minimo=x;
            }
        }
        aux=VecDados[i];
        VecDados[i]=VecDados[minimo];
        VecDados[minimo]=aux;
    }
   if(VecDados[0]==VecDados[1]&&VecDados[3]==VecDados[4]&&VecDados[5]==VecDados[6]){
        c++;}


    if (c==1){
        Suma=1000;

    }
    return Suma;
}


///escalera larga
int CombGanadoras8(int VecDados[], int tamD){
    int i, x, ant=0, Suma=0,  aux;
    bool bandera1=false;
   for(i=0;i<tamD;i++){
    for(x=0;x<tamD;x++){
        if( bandera1==false &&VecDados[x]==i+1){
            ant++;
            bandera1=true;
        }
    }
    bandera1=false;
   }
    if (ant==6){
        Suma=1500;

    }
    return Suma;
}


///sexteto de 1
int CombGanadoras9(int VecDados[], int tamD, int valorD1){
    int i, Suma=0, c=0;
    for (i=0; i<tamD; i++){
        if (VecDados[i]==valorD1){
            c++;
        }
    }
    if (c==6){
        Suma=10000;

    }
    return Suma;
}
/** mayor combinacion ganadora**/
int combinacionganadorafinal(int vpuntos[],int nueve){
int mayor,indicemayor;
mayor=vpuntos[0];
for (int f=1;f<nueve;f++)
{
    if(vpuntos[f]>mayor){
        mayor=vpuntos[f];
        indicemayor=f;
    }
}
return indicemayor;

}







#endif // FUNCIONESTRABAJOPRACTICOFINAL_H_INCLUDED
